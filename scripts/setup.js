#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';
import { exec } from 'child_process';
import { promisify } from 'util';

const execAsync = promisify(exec);
const __dirname = path.dirname(fileURLToPath(import.meta.url));
const rootDir = path.join(__dirname, '..');

console.log('üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ YandexGPT Node.js —Å–µ—Ä–≤–µ—Ä–∞...\n');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Node.js
const nodeVersion = process.version;
const majorVersion = parseInt(nodeVersion.split('.')[0].substring(1));

if (majorVersion < 18) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –¢—Ä–µ–±—É–µ—Ç—Å—è Node.js 18+.');
    console.error(`   –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: ${nodeVersion}`);
    process.exit(1);
}

console.log(`‚úÖ –í–µ—Ä—Å–∏—è Node.js: ${nodeVersion}`);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–∞ .env
const envPath = path.join(rootDir, '.env');
const envExamplePath = path.join(rootDir, '.env.example');

if (!fs.existsSync(envPath)) {
    console.log('\nüìù –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ .env –∏–∑ —à–∞–±–ª–æ–Ω–∞...');

    const envExample = `# ===================================
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–µ—Ä–∞
# ===================================
PORT=3000
NODE_ENV=development

# ===================================
# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Yandex Cloud
# ===================================
YANDEX_API_KEY=your_api_key_here
YANDEX_CATALOGUE_ID=your_catalogue_id_here
YANDEX_MODEL_URL=https://llm.api.cloud.yandex.net/foundationModels/v1/completion
YANDEX_MODEL=yandexgpt

# ===================================
# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
# ===================================
TEMPERATURE=0.3
MAX_TOKENS=1024

# ===================================
# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
# ===================================
CORS_ENABLED=false
LOG_LEVEL=info`;

    fs.writeFileSync(envPath, envExample);
    console.log('‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±–Ω–æ–≤–∏—Ç–µ –µ–≥–æ —Å–≤–æ–∏–º–∏ —É—á—ë—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏.');
} else {
    console.log('‚úÖ –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
}

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, –µ—Å–ª–∏ node_modules –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
const nodeModulesPath = path.join(rootDir, 'node_modules');

if (!fs.existsSync(nodeModulesPath)) {
    console.log('\nüì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...');
    try {
        const { stdout, stderr } = await execAsync('npm install', { cwd: rootDir });
        if (stderr && !stderr.includes('npm WARN')) {
            console.error('–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏:', stderr);
        }
        console.log('‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
    } catch (error) {
        console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:', error.message);
        process.exit(1);
    }
} else {
    console.log('‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã');
}

console.log('\n' + '='.repeat(50));
console.log('‚ú® –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
console.log('='.repeat(50));
console.log(`
–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:
1. –û–±–Ω–æ–≤–∏—Ç–µ —Ñ–∞–π–ª .env –≤–∞—à–∏–º–∏ —É—á—ë—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ Yandex Cloud:
   - YANDEX_API_KEY
   - YANDEX_CATALOGUE_ID

2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä:
   npm start

3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –∫ API:
   http://localhost:3000

–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å–º–æ—Ç—Ä–∏—Ç–µ README.md
`);
